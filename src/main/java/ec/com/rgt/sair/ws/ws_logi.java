package ec.com.rgt.sair.ws;

// Generated 08-jul-2013 0:41:27 by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.List;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;

import ec.com.rgt.sair.controller.LdapAutenticationWS;
import ec.com.rgt.sair.controller.Mensaje;
import ec.com.rgt.sair.controller.OperacionesLogin;
import ec.com.rgt.sair.hbm.Permisos;

/**
 * Grupos generated by hbm2java
 */
@WebService()

public class ws_logi {

    OperacionesLogin operacion = new OperacionesLogin();

	@WebMethod(operationName = "obtenerGruposUsuario")
    public String obtenerGruposUsuario(@WebParam(name="usuario")String usuario,
    		@WebParam(name="idAplicacion")BigDecimal idAplicacion) {
        String xmlOut;
        xmlOut = operacion.consultarGrupos(usuario,idAplicacion);
        return xmlOut;
    }


	@WebMethod(operationName = "obtenerAplicacion")
    public String obtenerAplicacion(@WebParam(name="grupo")String grupo) {
        String xmlOut;
        xmlOut = operacion.consultarAplicacion(grupo);
        return xmlOut;
    }
	
	@WebMethod(operationName = "obtenerAplicacionAll")
    public String obtenerAplicacionAll() {
        String xmlOut;
        xmlOut = operacion.consultarAplicacion();
        return xmlOut;
    }
   

	@WebMethod(operationName = "validarIngreso")
    public String validarIngreso(@WebParam(name="usuario")String usuario, @WebParam(name="clave")String clave) {
        String resultado="";
        resultado = operacion.validaUsuario(usuario, clave);
        return resultado;
    }
	
	@WebMethod(operationName = "authenticate")
    public boolean authenticate(@WebParam(name="usuario")String usuario, @WebParam(name="clave")String clave) {
		LdapAutenticationWS ws=new LdapAutenticationWS();
        return ws.authenticate(usuario,clave);
    }
	
	
	@WebMethod(operationName = "getUsersAreaAD")
    public List<Mensaje> getUsersAreaAD(String area) {
		LdapAutenticationWS ws=new LdapAutenticationWS();
        return ws.getUsersAreaAD(area,area);
    }
	
	@WebMethod(operationName = "deleteUsersAreaAD")
    public List<Mensaje> deleteUsersAreaAD() {
        return operacion.DeleteUserAD();
    }
	

	@WebMethod(operationName = "obtenerArbolMenu")
    public String obtenerArbolMenu(@WebParam(name="idGrupo")String idGrupo,@WebParam(name="idAplicacion")BigDecimal idAplicacion) {
        String xmlOut;
        xmlOut = operacion.obtenerArbol(idGrupo,idAplicacion);
        return xmlOut;
    }
    
	/*@WebMethod(operationName = "obtenerLlavePublica")
    public String obtenerLlavePublica() {        
        String xmlOut = "";
        xmlOut = operacion.obtenerKeyPublica();
        return xmlOut;
    }*/

	@WebMethod(operationName = "obtenerPermisos")
    public String obtenerPermisos(@WebParam(name="nombreGrupo")String nombreGrupo) {
        String xmlOut;
        xmlOut = operacion.obtenerPermisos(nombreGrupo);
        return xmlOut;
    }
	
	@WebMethod(operationName = "obtenerAllPermisos")
    public List<Permisos> obtenerAllPermisos(@WebParam(name="nombreGrupo")String nombreGrupo) {
        List<Permisos> xmlOut;
        xmlOut = operacion.obtenerAllPermisos(nombreGrupo);
        return xmlOut;
    }
    
	@WebMethod(operationName = "actualizarClave")
    public int actualizarClave(@WebParam(name="usuario")String usuario, @WebParam(name="clave")String clave) {
        int estado = 0;
        estado = operacion.actualizaClave(usuario, clave);
        return estado;
    }

	@WebMethod(operationName = "setearFechaExpClave")
    public int setearFechaExpClave(@WebParam(name="usuario")String usuario) {
        int estado = 0;
        estado = operacion.seteaFechaExpClave(usuario);
        return estado;
    }
   
	@WebMethod(operationName = "obtenerFechaExpClave")
    public String obtenerFechaExpClave(@WebParam(name="usuario")String usuario) {
        String fecha_exp_clave = "";
        fecha_exp_clave = operacion.obtenerFechaExpiraClave(usuario);
        return fecha_exp_clave;
    }
    
}
